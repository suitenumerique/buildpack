#!/bin/bash

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Function to output step messages
indent() {
  sed -u 's/^/       /'
}

# Function to read environment variables
read_env() {
  local env_dir=$1
  local var_name=$2
  local default_value=$3
  
  if [ -f "$env_dir/$var_name" ]; then
    cat "$env_dir/$var_name"
  else
    echo "$default_value"
  fi
}

# Read environment configuration
APP_NAME=$(read_env "$ENV_DIR" "LASUITE_APP_NAME" "")
FRONTEND_DIR=$(read_env "$ENV_DIR" "LASUITE_FRONTEND_DIR" "src/frontend")
BACKEND_DIR=$(read_env "$ENV_DIR" "LASUITE_BACKEND_DIR" "src/backend")
SCRIPT_PRE=$(read_env "$ENV_DIR" "LASUITE_SCRIPT_PRECOMPILE" "")
SCRIPT_MID=$(read_env "$ENV_DIR" "LASUITE_SCRIPT_MIDCOMPILE" "")
SCRIPT_POST=$(read_env "$ENV_DIR" "LASUITE_SCRIPT_POSTCOMPILE" "")
FRONTEND_BUILDPACK=$(read_env "$ENV_DIR" "LASUITE_FRONTEND_BUILDPACK" "https://github.com/Scalingo/nodejs-buildpack")
BACKEND_BUILDPACK=$(read_env "$ENV_DIR" "LASUITE_BACKEND_BUILDPACK" "https://github.com/Scalingo/python-buildpack")

echo "-----> La Suite NumÃ©rique buildpack. App name: $APP_NAME"

# Download and extract frontend buildpack
FRONTEND_BUILDPACK_DIR="$CACHE_DIR/frontend-buildpack"

if [ ! -d "$FRONTEND_BUILDPACK_DIR" ]; then
  echo "-----> Fetching Scalingo frontend buildpack"
  git clone "$FRONTEND_BUILDPACK" "$FRONTEND_BUILDPACK_DIR" 2>&1 | indent
fi

# Download and extract backend buildpack
BACKEND_BUILDPACK_DIR="$CACHE_DIR/backend-buildpack"

if [ ! -d "$BACKEND_BUILDPACK_DIR" ]; then
  echo "-----> Fetching Scalingo backend buildpack"
  git clone "$BACKEND_BUILDPACK" "$BACKEND_BUILDPACK_DIR" 2>&1 | indent
fi

# Run pre-compile script if it exists
if [ ! -z "$SCRIPT_PRE" ]; then
  echo "-----> Running pre-compile script: $SCRIPT_PRE"
  (cd "$BUILD_DIR" && sh -c "$SCRIPT_PRE") 2>&1 | indent
fi

# Build frontend
echo "-----> Building frontend in $FRONTEND_DIR"
"$FRONTEND_BUILDPACK_DIR/bin/compile" "$BUILD_DIR/$FRONTEND_DIR" "$CACHE_DIR/frontend" "$ENV_DIR" 2>&1 | indent

# Run mid-compile script if it exists
if [ ! -z "$SCRIPT_MID" ]; then
  echo "-----> Running mid-compile script: $SCRIPT_MID"
  (cd "$BUILD_DIR" && sh -c "$SCRIPT_MID") 2>&1 | indent
fi

# Build backend
echo "-----> Building backend in $BACKEND_DIR"
"$BACKEND_BUILDPACK_DIR/bin/compile" "$BUILD_DIR/$BACKEND_DIR" "$CACHE_DIR/backend" "$ENV_DIR" 2>&1 | indent

# Run post-compile script if it exists
if [ ! -z "$SCRIPT_POST" ]; then
  echo "-----> Running post-compile script: $SCRIPT_POST"
  (cd "$BUILD_DIR" && sh -c "$SCRIPT_POST") 2>&1 | indent
fi

echo "-----> Build completed" 